<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>harmy.me</title><link>http://harmy.me/</link><description></description><atom:link href="http://harmy.me/feeds/all.rss.xml" rel="self"></atom:link><lastBuildDate>Thu, 06 Sep 2012 00:00:00 +0800</lastBuildDate><item><title>Mysql创建用户总结</title><link>http://harmy.me/best-backdoor-ever.html</link><description>&lt;p&gt;在mysql下创建用户是家常便饭的事，每次都去google，各种不同版本看的眼花，不如自己记录一下，以后用得着。&lt;/p&gt;
&lt;p&gt;用root账户登录mysql，敲入并执行下列指令可以创建一个新的数据库并赋予myuser用户从任何主机任意操作该数据库&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="n"&gt;database&lt;/span&gt; &lt;span class="n"&gt;mydb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;CREATE&lt;/span&gt; &lt;span class="n"&gt;USER&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;myuser&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;IDENTIFIED&lt;/span&gt; &lt;span class="n"&gt;BY&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;mypassword&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;CREATE&lt;/span&gt; &lt;span class="n"&gt;USER&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;myuser&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;%&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;IDENTIFIED&lt;/span&gt; &lt;span class="n"&gt;BY&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;mypassword&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;GRANT&lt;/span&gt; &lt;span class="n"&gt;ALL&lt;/span&gt; &lt;span class="n"&gt;PRIVILEGES&lt;/span&gt; &lt;span class="n"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;mydb&lt;/span&gt;&lt;span class="o"&gt;.*&lt;/span&gt; &lt;span class="n"&gt;TO&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;myuser&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;GRANT&lt;/span&gt; &lt;span class="n"&gt;ALL&lt;/span&gt; &lt;span class="n"&gt;PRIVILEGES&lt;/span&gt; &lt;span class="n"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;mydb&lt;/span&gt;&lt;span class="o"&gt;.*&lt;/span&gt; &lt;span class="n"&gt;TO&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;myuser&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;%&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;FLUSH&lt;/span&gt; &lt;span class="n"&gt;PRIVILEGES&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;为什么我们要添加两个用户呢？原因是mysql认为localhost是个特殊的主机，因此不能通过%匹配它（真够SB)。所以如果你要在本机通过unix socket而不是tcp连接访问数据库，就要加这条了。此外相同的用户可以有不同的密码和权限组合，数量取决于你有几个这样的user-host配对。&lt;/p&gt;
&lt;p&gt;如果你想修改密码的话，请执行下列指令：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;PASSWORD&lt;/span&gt; &lt;span class="n"&gt;FOR&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;myuser&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PASSWORD&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;newpass&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;PASSWORD&lt;/span&gt; &lt;span class="n"&gt;FOR&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;myuser&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;%&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PASSWORD&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;newpass&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;FLUSH&lt;/span&gt; &lt;span class="n"&gt;PRIVILEGES&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">harmy</dc:creator><pubDate>Thu, 06 Sep 2012 00:00:00 +0800</pubDate><guid>tag:harmy.me,2012-09-06:best-backdoor-ever.html</guid></item><item><title>关于后门的一个段子</title><link>http://harmy.me/best-backdoor-ever.html</link><description>&lt;p&gt;刚听到一个关于Ken Thompson的段子：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;装了UNIX的PDP-11最早被安装在Bell Lab里供大家日常使用。很快大家就发现Ken总能进入他们的帐户，获得最高权限。Bell Lab里的科学家都心比天高，当然被搞得郁闷无比。于是有高手怒了，跳出来分析了UNIX代码，找到后门，修改代码，然后重新编译了整个UNIX。就在大家都以为“这个世界清净了”的时候，他们发现Ken还是轻而易举地拿到他们的帐户权限，百思不解后，只好继续郁闷。谁知道这一郁闷，就郁闷了14年，直到Ken道出个中缘由。原来，代码里的确有后门，但后门不在Unix代码里，而在编译Unix代码的C编译器里。每次C编译器编译UNIX的代码，就自动生成后门代码。而整个Bell Lab的人，都是用Ken的C编译器。&lt;/p&gt;
&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">harmy</dc:creator><pubDate>Fri, 24 Aug 2012 00:00:00 +0800</pubDate><guid>tag:harmy.me,2012-08-24:best-backdoor-ever.html</guid></item><item><title>The Twelve-Factor App</title><link>http://harmy.me/the-twelve-factor-app.html</link><description>&lt;p&gt;中文翻译：&lt;a href="https://github.com/liangshan/"&gt;梁山&lt;/a&gt;  英文原文：&lt;a href="http://www.12factor.net/"&gt;Adam Wiggins&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;简介&lt;/h1&gt;
&lt;p&gt;如今，软件通常会作为一种服务来交付，它们被称为网络应用程序，或“软件即服务”（SaaS）。“十二要素应用程序”（12-Factor App）为构建如下的SaaS应用提供了方法论：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用&lt;strong&gt;标准化&lt;/strong&gt;流程自动配置，从而使新的开发者花费最少的学习成本加入这个项目；&lt;/li&gt;
&lt;li&gt;和操作系统之间尽可能的&lt;strong&gt;划清界限&lt;/strong&gt;，在各个系统中提供&lt;strong&gt;最大的可移植性&lt;/strong&gt;；&lt;/li&gt;
&lt;li&gt;适合&lt;strong&gt;部署&lt;/strong&gt;在现代的&lt;strong&gt;云计算平台&lt;/strong&gt;，从而在服务器和系统管理方面节省资源；&lt;/li&gt;
&lt;li&gt;将开发环境和生产环境的&lt;strong&gt;差异降至最低&lt;/strong&gt;，并使用&lt;strong&gt;持续交付&lt;/strong&gt;实施敏捷开发；&lt;/li&gt;
&lt;li&gt;可以在工具、架构和开发流程不发生明显变化的前提下实现&lt;strong&gt;扩展&lt;/strong&gt;；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这套理论适用于任意语言和后端服务（数据库、消息队列、缓存等）开发的应用程序。&lt;/p&gt;
&lt;h1&gt;背景&lt;/h1&gt;
&lt;p&gt;本文的贡献者者参与过数以百计的应用程序的开发和部署，并通过&lt;a href="http://www.heroku.com/"&gt;Heroku&lt;/a&gt;平台间接见证了数十万应用程序的开发，运作以及扩展的过程。&lt;/p&gt;
&lt;p&gt;本文综合了我们关于SaaS应用几乎所有的经验和智慧，是开发此类应用的理想实践标准，并特别关注于应用程序如何保持良性成长，开发者之间如何进行有效的代码协作，以及如何&lt;a href="http://blog.heroku.com/archives/2011/6/28/the_new_heroku_4_erosion_resistance_explicit_contracts/"&gt;避免软件污染&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;我们的初衷是分享在现代软件开发过程中发现的一些系统性问题，并加深对这些问题的认识。我们提供了讨论这些问题时所需的共享词汇，同时使用相关术语给出一套针对这些问题的广义解决方案。本文格式的灵感来自于Martin Fowler的书籍： &lt;em&gt;&lt;a href="http://books.google.com/books/about/Patterns_of_enterprise_application_archi.html?id=FyWZt5DdvFkC"&gt;Patterns of Enterprise Application Architecture&lt;/a&gt;&lt;/em&gt; ， &lt;em&gt;&lt;a href="http://books.google.com/books/about/Refactoring.html?id=1MsETFPD3I0C"&gt;Refactoring&lt;/a&gt;&lt;/em&gt; 。&lt;/p&gt;
&lt;h1&gt;读者应该是哪些人？&lt;/h1&gt;
&lt;p&gt;任何SaaS应用的开发人员。部署和管理此类应用的运维工程师。&lt;/p&gt;
&lt;h1&gt;The Twelve Factors&lt;/h1&gt;
&lt;h2&gt;&lt;a href="http://www.harmy.me/pages/codebase.html"&gt;I. 基准代码&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;一份基准代码，多份部署&lt;/h3&gt;
&lt;h2&gt;&lt;a href="http://www.harmy.me/pages/dependencies.html"&gt;II. 依赖&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;显式声明依赖关系&lt;/h3&gt;
&lt;h2&gt;&lt;a href="http://www.harmy.me/pages/config.html"&gt;III. 配置&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;在环境中存储配置&lt;/h3&gt;
&lt;h2&gt;&lt;a href="http://www.harmy.me/pages/backing-services.html"&gt;IV. 后端服务&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;把后端服务当作附加资源&lt;/h3&gt;
&lt;h2&gt;&lt;a href="http://www.harmy.me/pages/build-release-run.html"&gt;V. 构建，发布，运行&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;严格分离构建和运行&lt;/h3&gt;
&lt;h2&gt;&lt;a href="http://www.harmy.me/pages/processes.html"&gt;VI. 进程&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;以一个或多个无状态进程运行应用&lt;/h3&gt;
&lt;h2&gt;&lt;a href="http://www.harmy.me/pages/port-binding.html"&gt;VII. 端口绑定&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;通过端口绑定提供服务&lt;/h3&gt;
&lt;h2&gt;&lt;a href="http://www.harmy.me/pages/concurrency.html"&gt;VIII. 并发&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;通过进程模型进行扩展&lt;/h3&gt;
&lt;h2&gt;&lt;a href="http://www.harmy.me/pages/disposability"&gt;IX. 易处理&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;快速启动和优雅终止可最大化健壮性&lt;/h3&gt;
&lt;h2&gt;&lt;a href="http://www.harmy.me/pages/dev-prod-parity.html"&gt;X. 开发环境与线上环境等价&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;尽可能的保持开发，预发布，线上环境相同&lt;/h3&gt;
&lt;h2&gt;&lt;a href="http://www.harmy.me/pages/logs.html"&gt;XI. 日志&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;把日志当作事件流&lt;/h3&gt;
&lt;h2&gt;&lt;a href="http://www.harmy.me/pages/admin-processes.html"&gt;XII. 管理进程&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;后台管理任务当作一次性进程运行&lt;/h3&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">harmy</dc:creator><pubDate>Thu, 23 Aug 2012 00:00:00 +0800</pubDate><guid>tag:harmy.me,2012-08-23:the-twelve-factor-app.html</guid><category>tech</category></item></channel></rss>